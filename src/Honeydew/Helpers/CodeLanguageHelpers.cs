using Microsoft.AspNetCore.Mvc.Rendering;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Honeydew.Helpers
{
    public static class CodeLanguageHelpers
    {
        public static readonly string[] Languages =
            new[]
            {
                "abap",
                "apex",
                "azcli",
                "bat",
                "cameligo",
                "clojure",
                "coffee",
                "cpp",
                "csharp",
                "csp",
                "css",
                "dockerfile",
                "fsharp",
                "go",
                "graphql",
                "handlebars",
                "html",
                "ini",
                "java",
                "javascript",
                "kotlin",
                "less",
                "lua",
                "markdown",
                "mips",
                "msdax",
                "mysql",
                "objective-c",
                "pascal",
                "pascaligo",
                "perl",
                "pgsql",
                "php",
                "postiats",
                "powerquery",
                "powershell",
                "pug",
                "python",
                "r",
                "razor",
                "redis",
                "redshift",
                "restructuredtext",
                "ruby",
                "rust",
                "sb",
                "scheme",
                "scss",
                "shell",
                "solidity",
                "sophia",
                "sql",
                "st",
                "swift",
                "tcl",
                "twig",
                "typescript",
                "vb",
                "xml",
                "yaml",
            };

        public static IEnumerable<SelectListItem> GetLanguages(string selectedLanguage)
            => new[]
            {
                new SelectListItem("None", "", string.IsNullOrEmpty(selectedLanguage))
            }
            .Concat(Languages.Select(x => new SelectListItem(x, x, selectedLanguage == x)));

        public static string GetLanageFromExtension(string extension)
            => extension.ToLowerInvariant() switch
            {
                ".bat" => "bat",
                ".cmd" => "bat",
                ".btm" => "bat",
                ".clj" => "clojure",
                ".cljs" => "clojure",
                ".cljc" => "clojure",
                ".edn" => "clojure",
                ".coffee" => "coffee",
                ".c" => "cpp",
                ".cc" => "cpp",
                ".cpp" => "cpp",
                ".cxx" => "cpp",
                ".c++" => "cpp",
                ".h" => "cpp",
                ".hh" => "cpp",
                ".hpp" => "cpp",
                ".hxx" => "cpp",
                ".h++" => "cpp",
                ".cs" => "csharp",
                ".csx" => "csharp",
                ".css" => "css",
                "Dockerfile" => "dockerfile",
                ".fs" => "fsharp",
                ".fsx" => "fsharp",
                ".go" => "go",
                ".handlebars" => "handlebars",
                ".htm" => "html",
                ".html" => "html",
                ".xhtml" => "html",
                ".ini" => "ini",
                ".java" => "java",
                ".js" => "javascript",
                ".jsx" => "javascript",
                ".kt" => "kotlin",
                ".less" => "less",
                ".lua" => "lua",
                ".md" => "markdown",
                ".markdown" => "markdown",
                ".msql" => "mysql",
                ".m" => "objective-c",
                ".mm" => "objective-c",
                ".M" => "objective-c",
                ".pp" => "pascal",
                ".pas" => "pascal",
                ".inc" => "pascal",
                ".plx" => "perl",
                ".pl" => "perl",
                ".pm" => "perl",
                ".xs" => "perl",
                ".t" => "perl",
                ".pod" => "perl",
                ".pgsql" => "pgsql",
                ".php" => "php",
                ".phtml" => "php",
                ".php3" => "php",
                ".php4" => "php",
                ".php5" => "php",
                ".php7" => "php",
                ".phps" => "php",
                ".php-s" => "php",
                ".pht" => "php",
                ".phar" => "php",
                ".ps1" => "powershell",
                ".ps1xml" => "powershell",
                ".psc1" => "powershell",
                ".psd1" => "powershell",
                ".psm1" => "powershell",
                ".pssc" => "powershell",
                ".psrc" => "powershell",
                ".cdxml" => "powershell",
                ".py" => "python",
                ".pyi" => "python",
                ".pyc" => "python",
                ".pyd" => "python",
                ".pyo" => "python",
                ".pyw" => "python",
                ".pyz" => "python",
                ".r" => "r",
                ".rdata" => "r",
                ".rds" => "r",
                ".rda" => "r",
                ".rb" => "ruby",
                ".rs" => "rust",
                ".rlib" => "rust",
                ".sass" => "scss",
                ".scss" => "scss",
                ".bash" => "shell",
                ".sh" => "shell",
                ".sql" => "sql",
                ".swift" => "swift",
                ".ts" => "typescript",
                ".tsx" => "typescript",
                ".vb" => "vb",
                ".vbs" => "vb",
                ".vbe" => "vb",
                ".wsf" => "vb",
                ".xml" => "xml",
                ".yaml" => "yaml",
                ".yml" => "yaml",
                _ => null
            };
    }
}
